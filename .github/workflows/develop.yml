name: Develop CI

on:
  push:
    branches:
      - develop
  # ONLY triggers on master branch
  repository_dispatch:
    types: [build-develop]

jobs:
  build-server:
    runs-on: ubuntu-latest
    env:
      CI: true
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_SETTINGS: ${{ secrets.NEXUS_SETTINGS }}
      working-directory: smallchat-server

    steps:
    - uses: actions/checkout@v2
      with:
        ref: develop
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Init
      run: |
        version=$(sed "s/^\t<version>\(.*\)<\/version>$/\1/;t;d" pom.xml)
        echo "Version: "$version
        if [[ ! $version =~ "SNAPSHOT" ]]; then
          echo ERROR: Wrong version 1>&2
          exit 1
        fi
        echo $version > ../server-version.txt
        mkdir -p ~/.m2
        echo $NEXUS_SETTINGS > ~/.m2/settings.xml
      working-directory: ${{ env.working-directory }}

    - name: Test
      run: make test
      working-directory: ${{ env.working-directory }}

    - name : Build
      run: make build
      working-directory: ${{ env.working-directory }}

    - name : Containerize
      run: make containerize
      working-directory: ${{ env.working-directory }}

    - name : Prepare Deploy
      uses: actions/upload-artifact@v2
      with:
        name: server-version
        path: server-version.txt


  build-client:
    runs-on: ubuntu-latest
    env:
      CI: true
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      working-directory: smallchat-client

    steps:
    - uses: actions/checkout@v2
      with:
        ref: develop
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Init
      run: |
        version=$(sed "s/^  \"version\": \"\(.*\)\",$/\1/;t;d" package.json)
        echo "Version: "$version
        if [[ ! $version =~ "SNAPSHOT" ]]; then
          echo ERROR: Wrong version 1>&2
          exit 1
        fi
        echo $version > ../client-version.txt
      working-directory: ${{ env.working-directory }}

    - name: Test
      run: make test
      working-directory: ${{ env.working-directory }}

    - name : Build
      run: make build
      working-directory: ${{ env.working-directory }}

    - name : Containerize
      run: make containerize
      working-directory: ${{ env.working-directory }}

    - name : Prepare Deploy
      uses: actions/upload-artifact@v2
      with:
        name: client-version
        path: client-version.txt


  deploy:
    needs: [build-server, build-client]
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.QA_HOST }}
      SSH_KEY: ${{ secrets.QA_SSH_KEY }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: server-version

      - uses: actions/download-artifact@v2
        with:
          name: client-version

      - name: Deploy
        run: |
          serverVersion=$(cat server-version.txt)
          clientVersion=$(cat client-version.txt)
          echo "server: $serverVersion // client: $clientVersion"
          which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
          eval $(ssh-agent)
          echo "$SSH_KEY" | tr -d '\r' | ssh-add -
          ssh -o StrictHostKeyChecking=no $SSH_HOST "cd appdemos && sudo ./deploy.sh smallchat server $serverVersion && sudo ./deploy.sh smallchat client $clientVersion && exit"

